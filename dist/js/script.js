let{src,dest,watch,series,parallel}=require("gulp"),srcBase="../src",distBase="../dist",srcPath={css:srcBase+"/sass/**/*.scss",img:srcBase+"/images/**/*",js:srcBase+"/js/**/*.js"},distPath={css:distBase+"/css/",img:distBase+"/images/",html:distBase+"/**/*.html",js:distBase+"/js/"},browserSync=require("browser-sync"),browserSyncOption={server:distBase},browserSyncFunc=()=>{browserSync.init(browserSyncOption)},browserSyncReload=s=>{browserSync.reload(),s()},sass=require("gulp-sass")(require("sass")),sassGlob=require("gulp-sass-glob-use-forward"),plumber=require("gulp-plumber"),notify=require("gulp-notify"),postcss=require("gulp-postcss"),cssnext=require("postcss-cssnext"),sourcemaps=require("gulp-sourcemaps"),cleanCSS=require("gulp-clean-css"),uglify=require("gulp-uglify"),browsers=["last 2 versions","> 5%","ie = 11","not ie <= 10","ios >= 8","and_chr >= 5","Android >= 5"],cssSass=()=>src(srcPath.css).pipe(sourcemaps.init()).pipe(plumber({errorHandler:notify.onError("Error:<%= error.message %>")})).pipe(sassGlob()).pipe(sass.sync({includePaths:["src/sass"],outputStyle:"expanded"})).pipe(postcss([cssnext({features:{rem:!1}},browsers)])).pipe(cleanCSS()).pipe(sourcemaps.write("./")).pipe(dest(distPath.css)).pipe(notify({message:"Sassをコンパイルしてるんやで〜！",onLast:!0})),imagemin=require("gulp-imagemin"),imageminMozjpeg=require("imagemin-mozjpeg"),imageminPngquant=require("imagemin-pngquant"),imageminSvgo=require("imagemin-svgo"),webp=require("gulp-webp"),imgImagemin=()=>src(srcPath.img).pipe(imagemin([imageminMozjpeg({quality:80}),imageminPngquant(),imageminSvgo({plugins:[{removeViewbox:!1}]})],{verbose:!0})).pipe(dest(distPath.img)).pipe(webp()).pipe(dest(distPath.img)),jsUglify=()=>src(srcPath.js).pipe(plumber({errorHandler:notify.onError("Error:<%= error.message %>")})).pipe(uglify()).pipe(dest(distPath.js)).pipe(notify({message:"JavaScriptを圧縮しました！",onLast:!0})),watchFiles=()=>{watch(srcPath.css,series(cssSass,browserSyncReload)),watch(srcPath.img,series(imgImagemin,browserSyncReload)),watch(srcPath.js,series(jsUglify,browserSyncReload)),watch(distPath.html,series(browserSyncReload)),watch(distPath.js,series(browserSyncReload))},del=require("del"),delPath={css:distBase+"/css/style.css",cssMap:distBase+"/css/style.css.map",img:distBase+"/images/"},clean=s=>{del(delPath.css,{force:!0}),del(delPath.cssMap,{force:!0}),del(delPath.img,{force:!0}),s()};exports.default=series(series(clean,imgImagemin,cssSass,jsUglify),parallel(watchFiles,browserSyncFunc));